{"version":3,"file":"static/js/749.e9dba92f.chunk.js","mappings":"+TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,wGACTF,IAAAA,IAAA,sCAAyCC,IADhC,uBACxBE,EADwB,EACxBA,KACAC,EAAYD,EAAZC,QAFwB,kBAGzBA,GAHyB,2CAAH,qDAMlBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,IAAAA,IAAA,iBACXM,EADW,oBACQL,EADR,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfI,EAAS,mCAAG,WAAMD,GAAN,2FACAN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,oBADA,uBACfE,EADe,EACfA,KAGAK,EAASL,EAATK,KAJe,kBAKhBA,GALgB,2CAAH,sDAQTC,EAAY,mCAAG,WAAMH,GAAN,2FACHN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,2BADG,uBAClBE,EADkB,EAClBA,KAGAC,EAAYD,EAAZC,QAJkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAsB,mCAAG,WAAMC,GAAN,2FACbX,IAAAA,IAAA,+BACGC,EADH,iCAC+BU,EAD/B,gCADa,uBAC5BR,EAD4B,EAC5BA,KAGAC,EAAYD,EAAZC,QAJ4B,kBAK7BA,GAL6B,2CAAH,uD,+ECGnC,UA3Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,MAAqBc,KAAKF,KACzB,KAGD,UAAC,EAAAG,UAAD,YACE,SAAC,EAAAC,OAAD,8BACA,SAAC,EAAAC,KAAD,UACGN,GACCA,EAAOO,KAAI,SAAAC,GAAK,OACd,SAAC,EAAAC,UAAD,WACE,UAAC,EAAAC,UAAD,CAAWC,GAAE,kBAAaH,EAAMI,IAAhC,WACE,SAAC,EAAAC,MAAD,CACEC,IAAG,0CAAqCN,EAAMO,aAC9CC,IAAI,KAELR,EAAMS,mBANKT,EAAMI,c,+PCrBrBR,EAAYc,EAAAA,EAAAA,IAAH,iEAKTZ,EAAOY,EAAAA,EAAAA,GAAH,iGAMJT,EAAYS,EAAAA,EAAAA,GAAH,yPASTR,GAAYQ,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,uHAQTL,EAAQK,EAAAA,EAAAA,IAAH,4JAQLb,EAASa,EAAAA,EAAAA,GAAH","sources":["components/services/api.jsx","page/Home/Home.jsx","page/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '4ab48dfc0ecb6ed8c49106d1e05906af';\n\nexport const fetchPopListMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  const { results } = data;\n  return results;\n};\n\nexport const fetchOneMovieId = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const { cast } = data;\n  return cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const { results } = data;\n  return results;\n};\n\nexport const fetchMoviesForKeyWorld = async valueSearch => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${valueSearch}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  return results;\n};\n","import { useState, useEffect } from 'react';\nimport { fetchPopListMovies } from 'components/services/api';\nimport {\n  Container,\n  ListItems,\n  ListTitle,\n  Image,\n  Card,\n  Header,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    fetchPopListMovies().then(setMovies);\n  }, []);\n\n  return (\n    <Container>\n      <Header>Trending today</Header>\n      <Card>\n        {movies &&\n          movies.map(movie => (\n            <ListItems key={movie.id}>\n              <ListTitle to={`/movies/${movie.id}`}>\n                <Image\n                  src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                  alt=\"\"\n                />\n                {movie.original_title}\n              </ListTitle>\n            </ListItems>\n          ))}\n      </Card>\n    </Container>\n  );\n};\nexport default Home;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1100px;\n  margin: 0 auto;\n`;\n\nexport const Card = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nexport const ListItems = styled.li`\n  list-style: none;\n  margin-bottom: 20px;\n  text-align: center;\n  flex-basis: 23%;\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n`;\n\nexport const ListTitle = styled(Link)`\n  text-decoration: none;\n  width: 270px;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;\nexport const Image = styled.img`\n  padding-bottom: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Header = styled.h1`\n  margin-bottom: 20px;\n`;\n"],"names":["axios","KEY","fetchPopListMovies","data","results","fetchOneMovieId","movieId","fetchCast","cast","fetchReviews","fetchMoviesForKeyWorld","valueSearch","useState","movies","setMovies","useEffect","then","Container","Header","Card","map","movie","ListItems","ListTitle","to","id","Image","src","poster_path","alt","original_title","styled","Link"],"sourceRoot":""}