{"version":3,"file":"static/js/863.e3fa2a5d.chunk.js","mappings":"+TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,wGACTF,IAAAA,IAAA,sCAAyCC,IADhC,uBACxBE,EADwB,EACxBA,KACAC,EAAYD,EAAZC,QAFwB,kBAGzBA,GAHyB,2CAAH,qDAMlBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,IAAAA,IAAA,iBACXM,EADW,oBACQL,EADR,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfI,EAAS,mCAAG,WAAMD,GAAN,2FACAN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,oBADA,uBACfE,EADe,EACfA,KAGAK,EAASL,EAATK,KAJe,kBAKhBA,GALgB,2CAAH,sDAQTC,EAAY,mCAAG,WAAMH,GAAN,2FACHN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,2BADG,uBAClBE,EADkB,EAClBA,KAGAC,EAAYD,EAAZC,QAJkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAsB,mCAAG,WAAMC,GAAN,2FACbX,IAAAA,IAAA,+BACGC,EADH,iCAC+BU,EAD/B,gCADa,uBAC5BR,EAD4B,EAC5BA,KAGAC,EAAYD,EAAZC,QAJ4B,kBAK7BA,GAL6B,2CAAH,uD,gICdnC,EAlBgB,WACd,MCA6B,WAC7B,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAaH,GAASW,KAAKF,KAC1B,CAACT,IACG,CAAEQ,QAAAA,GDPWI,GAAZJ,EAAR,EAAQA,QACR,OACE,wBACGA,GACCA,EAAQK,KAAI,SAAAC,GAAM,OAChBA,EAAOC,SACL,2BACE,SAAC,EAAAC,OAAD,UAASF,EAAOG,UAChB,SAAC,EAAAC,WAAD,UAAaJ,EAAOC,YAFbD,EAAOK,KAKhB,mD,4HEbCH,EAASI,EAAAA,EAAAA,GAAH,iDAGNF,EAAaE,EAAAA,EAAAA,EAAH","sources":["components/services/api.jsx","page/Reviews/Reviews.jsx","hoc/useFetchReviews.jsx","page/Reviews/Reviews.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '4ab48dfc0ecb6ed8c49106d1e05906af';\n\nexport const fetchPopListMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  const { results } = data;\n  return results;\n};\n\nexport const fetchOneMovieId = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const { cast } = data;\n  return cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const { results } = data;\n  return results;\n};\n\nexport const fetchMoviesForKeyWorld = async valueSearch => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${valueSearch}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  return results;\n};\n","import { Header, TextReview } from './Reviews.styled';\nimport { useFetchRewiews } from 'hoc/useFetchReviews';\n\nconst Reviews = () => {\n  const { reviews } = useFetchRewiews();\n  return (\n    <ul>\n      {reviews &&\n        reviews.map(review =>\n          review.content ? (\n            <li key={review.id}>\n              <Header>{review.author}</Header>\n              <TextReview>{review.content}</TextReview>\n            </li>\n          ) : (\n            <p>Rewies not found</p>\n          )\n        )}\n    </ul>\n  );\n};\nexport default Reviews;\n","import { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/services/api';\nimport { useState, useEffect } from 'react';\n\nexport const useFetchRewiews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n  return { reviews };\n};\n","import styled from '@emotion/styled';\n\nexport const Header = styled.h4`\n  padding-bottom: 10px;\n`;\nexport const TextReview = styled.p`\n  line-height: normal;\n  padding-bottom: 10px;\n`;\n"],"names":["axios","KEY","fetchPopListMovies","data","results","fetchOneMovieId","movieId","fetchCast","cast","fetchReviews","fetchMoviesForKeyWorld","valueSearch","useParams","useState","reviews","setReviews","useEffect","then","useFetchRewiews","map","review","content","Header","author","TextReview","id","styled"],"sourceRoot":""}