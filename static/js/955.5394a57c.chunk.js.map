{"version":3,"file":"static/js/955.5394a57c.chunk.js","mappings":"+TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,wGACTF,IAAAA,IAAA,sCAAyCC,IADhC,uBACxBE,EADwB,EACxBA,KACAC,EAAYD,EAAZC,QAFwB,kBAGzBA,GAHyB,2CAAH,qDAMlBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,IAAAA,IAAA,iBACXM,EADW,oBACQL,EADR,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfI,EAAS,mCAAG,WAAMD,GAAN,2FACAN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,oBADA,uBACfE,EADe,EACfA,KAGAK,EAASL,EAATK,KAJe,kBAKhBA,GALgB,2CAAH,sDAQTC,EAAY,mCAAG,WAAMH,GAAN,2FACHN,IAAAA,IAAA,iBACXM,EADW,4BACgBL,EADhB,2BADG,uBAClBE,EADkB,EAClBA,KAGAC,EAAYD,EAAZC,QAJkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAsB,mCAAG,WAAMC,GAAN,2FACbX,IAAAA,IAAA,+BACGC,EADH,iCAC+BU,EAD/B,gCADa,uBAC5BR,EAD4B,EAC5BA,KAGAC,EAAYD,EAAZC,QAJ4B,kBAK7BA,GAL6B,2CAAH,uD,gICanC,EAlCqB,WACnB,MCXkC,WAClC,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBC,GAASW,KAAKF,KAC7B,CAACT,IAEJ,IAAMY,GAAWC,EAAAA,EAAAA,MAGjB,MAAO,CAAEL,MAAAA,EAAOM,OAFD,kBAAMF,GAAU,KDELG,GAAlBP,EAAR,EAAQA,MAAOM,EAAf,EAAeA,OACf,OACE,iCACE,SAAC,EAAAE,OAAD,CAAQC,QAASH,EAAjB,oBACCN,IACC,UAAC,EAAAU,UAAD,YACE,SAAC,EAAAC,IAAD,CACEC,IAAG,0CAAqCZ,EAAMa,aAC9CC,IAAI,MAEN,UAAC,EAAAC,KAAD,YACE,SAAC,EAAAC,OAAD,UAAShB,EAAMiB,SACf,UAAC,EAAAC,UAAD,0BAAwBlB,EAAMmB,eAC9B,SAAC,EAAAH,OAAD,yBACA,SAAC,EAAAE,UAAD,UAAYlB,EAAMoB,YAClB,SAAC,EAAAC,OAAD,sBACA,SAAC,EAAAH,UAAD,UACGlB,EAAMsB,OAAOC,KAAI,SAAAC,GAAI,OACpB,0BAAmBA,EAAKC,KAAxB,MAASD,EAAKE,UAGlB,oDACA,UAAC,EAAAC,eAAD,YACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,OAAR,mBACA,SAAC,EAAAD,KAAD,CAAMC,GAAE,UAAR,4BAGJ,SAAC,KAAD,Y,0VEvCGnB,EAAYoB,EAAAA,EAAAA,IAAH,0IAOTd,EAASc,EAAAA,EAAAA,GAAH,8EAKNnB,EAAMmB,EAAAA,EAAAA,IAAH,+HAOHf,EAAOe,EAAAA,EAAAA,IAAH,yFAMJZ,EAAYY,EAAAA,EAAAA,EAAH,iDAGTT,EAASS,EAAAA,EAAAA,GAAH,iDAINH,EAAiBG,EAAAA,EAAAA,IAAH,2EAKdF,GAAOE,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,gGAKJtB,EAASsB,EAAAA,EAAAA,OAAH","sources":["components/services/api.jsx","page/MovieDetails/MovieDetails.jsx","hoc/useFetchMovieDetails.jsx","page/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '4ab48dfc0ecb6ed8c49106d1e05906af';\n\nexport const fetchPopListMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  const { results } = data;\n  return results;\n};\n\nexport const fetchOneMovieId = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const { cast } = data;\n  return cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  const { results } = data;\n  return results;\n};\n\nexport const fetchMoviesForKeyWorld = async valueSearch => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${valueSearch}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  return results;\n};\n","import { Outlet } from 'react-router-dom';\nimport { useFethcMovieDetails } from 'hoc/useFetchMovieDetails';\nimport {\n  Container,\n  Header,\n  Img,\n  Info,\n  TextScore,\n  Genres,\n  AddInformation,\n  Link,\n  Button,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movie, goBack } = useFethcMovieDetails();\n  return (\n    <>\n      <Button onClick={goBack}>goBack</Button>\n      {movie && (\n        <Container>\n          <Img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt=\"\"\n          />\n          <Info>\n            <Header>{movie.title}</Header>\n            <TextScore>User Score: {movie.popularity}</TextScore>\n            <Header>Overview:</Header>\n            <TextScore>{movie.overview}</TextScore>\n            <Genres>Genres</Genres>\n            <TextScore>\n              {movie.genres.map(item => (\n                <li key={item.id}>{item.name} </li>\n              ))}\n            </TextScore>\n            <h4>Additional Information</h4>\n            <AddInformation>\n              <Link to={`cast`}>Cast</Link>\n              <Link to={`reviews`}>Reviews</Link>\n            </AddInformation>\n          </Info>\n          <Outlet />\n        </Container>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchOneMovieId } from '../components/services/api';\n\nexport const useFethcMovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchOneMovieId(movieId).then(setMovie);\n  }, [movieId]);\n\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  return { movie, goBack };\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1100px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nexport const Header = styled.h2`\n  padding-bottom: 15px;\n  /* text-align: center; */\n`;\n\nexport const Img = styled.img`\n  width: 260px;\n  height: 360px;\n  padding-right: 15px;\n  flex-basis: 25%;\n  margin-bottom: 25px;\n`;\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 65%;\n`;\n\nexport const TextScore = styled.p`\n  padding-bottom: 10px;\n`;\nexport const Genres = styled.h3`\n  padding-bottom: 10px;\n`;\n\nexport const AddInformation = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  padding-right: 10px;\n  padding-top: 10px;\n`;\nexport const Button = styled.button`\n  margin-left: 82px;\n  margin-bottom: 10px;\n  width: 55px;\n  height: 20px;\n`;\n"],"names":["axios","KEY","fetchPopListMovies","data","results","fetchOneMovieId","movieId","fetchCast","cast","fetchReviews","fetchMoviesForKeyWorld","valueSearch","useParams","useState","movie","setMovie","useEffect","then","navigate","useNavigate","goBack","useFethcMovieDetails","Button","onClick","Container","Img","src","poster_path","alt","Info","Header","title","TextScore","popularity","overview","Genres","genres","map","item","name","id","AddInformation","Link","to","styled","NavLink"],"sourceRoot":""}